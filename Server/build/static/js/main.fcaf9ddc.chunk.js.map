{"version":3,"sources":["useForm.js","validate.js","Components/AddPlaceForm.jsx","Components/SearchBy.jsx","Components/SideNavBar.jsx","Components/Results.jsx","Components/TopBar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useForm","initialValues","validate","useState","inputs","setInputs","errors","setErrors","handleSubmit","e","a","preventDefault","validationErrors","noErrors","Object","keys","length","fetch","method","headers","body","JSON","stringify","then","res","console","log","place","streetAddress","city","countryOrRegion","latitude","longitude","handleInputChange","event","persist","target","name","value","general","AddPlaceForm","plusCode","className","onSubmit","style","borderColor","type","placeholder","onChange","color","fontSize","width","Button","SearchBy","fromChildToParentCallback","gotSearchResults","setGotSearchResults","sendResultsToParent","allResults","searchWord","Form","json","result","results","forEach","item","push","err","Group","Control","as","InputGroup","size","FormControl","aria-label","aria-describedby","marginTop","marginBottom","backgroundColor","SideNavBar","closeNav","formToOpen","onClick","position","bottom","Results","data","title","Accordion","defaultActiveKey","borderRadius","map","Card","minWidth","Toggle","Header","eventKey","_id","Collapse","Body","textAlign","TopBar","props","onAddPlaceClick","visibility","showSideBarButton","onGetPlacesClick","App","setResults","setTitle","sideBarWidth","setSideBarWidth","setShowSideBarButton","formInSideBar","setFormInSideBar","receivedChildValue","items","allPlaces","places","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcaf9ddc.chunk.js","sourcesContent":["import {useState} from 'react';\n\nconst useForm = (initialValues, validate) => {\n    const [inputs,setInputs] = useState(initialValues);\n    const [errors,setErrors] = useState({});\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const validationErrors = validate(inputs);\n        const noErrors = Object.keys(validationErrors).length === 0;\n        setErrors(validationErrors);\n        if (noErrors) {\n\n            await fetch('/api/add-place', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(inputs),\n            }).then((res) => {\n                console.log(res)\n                setInputs({\n                    place: '',\n                    streetAddress: '',\n                    city: '',\n                    countryOrRegion: '',\n                    latitude: null,\n                    longitude: null\n                })\n            });\n\n        } else {\n            console.log(\"Error\",validationErrors);\n        }\n    }\n\n    const handleInputChange = (event) => {\n        event.persist();\n        setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n    }\n\n    return {\n        handleSubmit,\n        handleInputChange,\n        inputs,\n        errors\n    };\n}\n\nexport default useForm;\n","const validate = (inputs) => {\n\n    const errors = {};\n    //\n    if (!inputs.place) {\n        errors.place = 'Please add a name for the place';\n    }\n    if(!inputs.countryOrRegion && !inputs.city && !inputs.latitude && !inputs.longitude) {\n        errors.general = 'You must have either a city and country/region or lat & long coordinators.'\n    }\n\n    if ((inputs.latitude && !inputs.longitude) || (!inputs.latitude && inputs.longitude)) {\n        if (inputs.latitude > 90 || inputs.latitude < -90) {\n            errors.latitude = 'Invalid latitude value, please enter a decimal value between 0 and 90'\n        }\n        if (inputs.longitude > 180 || inputs.longitude < -180) {\n            errors.longitude = 'Invalid longitude value, please enter a decimal value between 0 and 180'\n        }\n    }\n\n    return errors;\n}\n\nexport default validate;\n","import React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport useForm from '../useForm';\nimport validate from '../validate';\n\nconst AddPlaceForm = () => {\n    const {inputs, handleInputChange, handleSubmit, errors} = useForm({\n        place: '',\n        streetAddress: '',\n        city: '',\n        countryOrRegion: '',\n        latitude: null,\n        longitude: null,\n        plusCode: ''\n    }, validate);\n\n    return (\n        <div className=\"addPlaceForm\">\n            <form onSubmit={handleSubmit}>\n                <input\n                    style={{borderColor: errors.place ? 'red' : \"transparent\"}}\n                    type=\"text\" placeholder=\"Place Name\"\n                    name=\"place\"\n                    onChange={handleInputChange}\n                    value={inputs.place}/>\n                {errors.place ? <p style={{color: \"red\", fontSize: 15}}>{errors.place}</p> : null}\n                <input\n                    type=\"text\"\n                    placeholder=\"Street Name / Near\"\n                    name=\"streetAddress\"\n                    onChange={handleInputChange}\n                    value={inputs.streetAddress}/>\n                <input\n                    style={{borderColor: errors.general ? 'red' : \"transparent\"}}\n                    type=\"text\"\n                    placeholder=\"City\"\n                    name=\"city\"\n                    onChange={handleInputChange}\n                    value={inputs.city}/>\n                <input\n                    style={{borderColor: errors.general ? 'red' : \"transparent\"}}\n                    type=\"text\"\n                    placeholder=\"Country/Region\"\n                    name=\"countryOrRegion\"\n                    onChange={handleInputChange}\n                    value={inputs.countryOrRegion}/>\n                <input\n                    style={{borderColor: errors.general || errors.latitude ? 'red' : \"transparent\"}}\n                    type=\"number\" placeholder=\"Latitude\"\n                    name=\"latitude\"\n                    onChange={handleInputChange}\n                    value={inputs.latitude}/>\n                {errors.latitude ? <p style={{color: \"red\", fontSize: 15}}>{errors.latitude}</p> : null}\n                <input\n                    style={{borderColor: errors.general || errors.longitude ? 'red' : \"transparent\", width: 'auto'}}\n                    type=\"number\"\n                    placeholder=\"Longitude\"\n                    name=\"longitude\"\n                    onChange={handleInputChange}\n                    value={inputs.longitude}/>\n                {errors.longitude ? <p style={{color: \"red\", fontSize: 15}}>{errors.longitude}</p> : null}\n                {errors.general ? <p style={{color: \"red\", fontSize: 15}}>{errors.general}</p> : null}\n                <Button type=\"submit\">Add Place</Button>\n            </form>\n        </div>\n    );\n};\nexport default AddPlaceForm;\n","import React, {useState} from \"react\";\nimport {Button, Form, FormControl, InputGroup} from \"react-bootstrap\";\n\nconst SearchBy = ({fromChildToParentCallback}) => {\n    const [gotSearchResults, setGotSearchResults] = useState(null);\n\n    const handleClick = e => {\n        e.preventDefault();\n        console.log();\n        if(e.target[1].value.length === 0) {\n            setGotSearchResults(false);\n            return;\n        }\n        fetch('/api/search?key='+e.target[0].value + \"&value=\"+e.target[1].value, {method: 'GET'})\n            .then(res => res.json()).then(\n            (result) => {\n                const allResults = [];\n                result.results.forEach(item => {\n                    allResults.push(item);\n                });\n                setGotSearchResults(true);\n                sendResultsToParent(allResults, e.target[1].value);\n            },\n            // error handler\n            (err) => {\n                console.log(err)\n            },\n        );\n    }\n\n    const sendResultsToParent = (allResults, searchWord) => {\n        return fromChildToParentCallback(allResults, searchWord)\n    }\n    return (\n        <div className=\"searchByContainer\">\n            <Form onSubmit={handleClick}>\n                <Form.Group>\n                    <Form.Control as=\"select\">\n                        <option>Place</option>\n                        <option>Street Address</option>\n                        <option>City</option>\n                        <option>Country / Region</option>\n                    </Form.Control>\n                    <InputGroup size=\"sm\" className=\"mb-3\" place>\n                        <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" type=\"text\" placeholder=\"Search for..\"/>\n                    </InputGroup>\n                </Form.Group>\n                <Button type=\"submit\" style={{marginTop: 15, marginBottom: 30, backgroundColor: gotSearchResults === false ? \"red\" : null}}>Search</Button>\n            </Form>\n        </div>\n    );\n};\nexport default SearchBy;\n","import React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport AddPlaceForm from \"./AddPlaceForm\";\nimport SearchBy from \"./SearchBy\";\n\nconst SideNavBar = ({width, closeNav, formToOpen, fromChildToParentCallback}) => {\n    return (\n        <div className=\"sidenav\" style={{width: width}}>\n            {formToOpen === 'addPlace' ? <AddPlaceForm />: <SearchBy fromChildToParentCallback={fromChildToParentCallback}/>}\n            <Button onClick={closeNav} style={{position: 'absolute', bottom: 0, marginTop: 10, marginBottom: 30}}>Done</Button>\n        </div>\n    );\n};\nexport default SideNavBar;\n","import React from \"react\";\nimport {Accordion, Card} from \"react-bootstrap\";\n\nconst Results = ({data, title}) => {\n\n    return (\n        <div className=\"placesListContainer\">\n            <h3 style={{color: \"white\"}}>{title}</h3>\n            <Accordion defaultActiveKey=\"0\" style={{borderRadius: 7}}>\n                {data.map((item) => (\n                    <Card key={item._id} style={{ minWidth: '18rem'}}>\n                        <Accordion.Toggle as={Card.Header} eventKey={item._id}>Place: {item.place}</Accordion.Toggle>\n                        <Accordion.Collapse eventKey={item._id}>\n                            <Card.Body>\n                                <ul className=\"placeAttr\" style={{width: \"max-content\", textAlign: \"left\"}}>\n                                    {item.streetAddress ? <li>{item.streetAddress}</li> : null}\n                                    {item.city ? <li>{item.city}</li> : null}\n                                    {item.countryOrRegion ?  <li>{item.countryOrRegion}</li> : null}\n                                    {item.latitude ? <li>{item.latitude}</li> : null}\n                                    {item.longitude ? <li>{item.longitude}</li> : null}\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                ))}\n            </Accordion>\n        </div>\n    );\n};\nexport default Results;\n","import React from \"react\";\nimport {Accordion, Button, Card} from \"react-bootstrap\";\nimport SearchBy from \"./SearchBy\";\n\nconst TopBar = (props) => {\n\n    return (\n        <div className=\"topButtonContainer\">\n            <Button onClick={() => props.onAddPlaceClick('addPlace')} style={{visibility: props.showSideBarButton ? 'visible' : 'hidden' }}>Add Place</Button>\n            <Button onClick={props.onGetPlacesClick}>Get Places</Button>\n            <Button onClick={() => props.onAddPlaceClick('search')}>Search</Button>\n        </div>\n    );\n};\nexport default TopBar;\n","import React, {useState} from 'react';\nimport SideNavBar from \"./Components/SideNavBar\";\nimport Results from \"./Components/Results\";\nimport TopBar from \"./Components/TopBar\";\nimport './assets/css/App.css';\n\nconst App = () => {\n    const [results, setResults] = useState([]);\n    const [title, setTitle] = useState('');\n    const [sideBarWidth, setSideBarWidth] = useState('0%');\n    const [showSideBarButton, setShowSideBarButton] = useState(true);\n    const [formInSideBar, setFormInSideBar] = useState('true');\n\n    const getPlaceClick = () => {\n        fetch('/api/get-database').then(res => res.json()).then((result) => {\n            const allPlaces = [];\n            result.places.forEach(place => {\n                allPlaces.push(place);\n            });\n            setTitle(`All Places in DB`)\n            setResults(allPlaces);\n        }, (err) => {\n            console.log(err)\n        })\n    };\n    const receivedChildValue = (items, searchWord) => {\n        if(items.length === 0){\n            setTitle(`No places were found matching: ${searchWord}`)\n        } else {\n            setTitle(`Search Results for: ${searchWord}`)\n        }\n        setResults(items);\n    };\n    const openSidenav = (formToOpen) => {\n        setFormInSideBar(formToOpen);\n        console.log(formToOpen)\n        setSideBarWidth('min-content');\n        setShowSideBarButton(false);\n    }\n    const closeSidenav = () => {\n        setSideBarWidth('0%');\n        setShowSideBarButton(true);\n    }\n\n    return (\n        <div className=\"App\">\n            <TopBar\n                onAddPlaceClick={openSidenav}\n                showSideBarButton={showSideBarButton}\n                onGetPlacesClick={getPlaceClick}\n                fromChildToParentCallback={receivedChildValue}\n            />\n            <SideNavBar\n                width={sideBarWidth}\n                closeNav={closeSidenav}\n                formToOpen={formInSideBar}\n                fromChildToParentCallback={receivedChildValue}/>\n            <Results data={results} title={title}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}